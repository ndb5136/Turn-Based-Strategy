package turnbasedstrategy;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import javax.swing.SwingUtilities;

/**
 * Sign up panel
 * @author Cody Zerbe
 */
public class jpSignUp extends javax.swing.JPanel {

    //Declare variables
    DBConnection connect = new DBConnection();
    Connection con = connect.connectToDB();
    String username;
    String password;
    String confirmPassword;
    PreparedStatement ps;
    ResultSet rs;
    ResultSetMetaData rsMD;
    int column;
    String S;
    JFrame frame;
    
    /**
     * Creates new form jpSignUp
     */
    public jpSignUp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtfUsername = new javax.swing.JTextField();
        jlUsername = new javax.swing.JLabel();
        jlPassword = new javax.swing.JLabel();
        jlConfirmPassword = new javax.swing.JLabel();
        jbSignUp = new javax.swing.JButton();
        jtfPassword = new javax.swing.JPasswordField();
        jtfConfirmPassword = new javax.swing.JPasswordField();

        jlUsername.setText("Username:");

        jlPassword.setText("Password:");

        jlConfirmPassword.setText("Confirm Password:");

        jbSignUp.setText("Sign Up");
        jbSignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSignUpActionPerformed(evt);
            }
        });

        jtfPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfPasswordActionPerformed(evt);
            }
        });

        jtfConfirmPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfConfirmPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(jbSignUp))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlConfirmPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlUsername, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlPassword, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlUsername))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jlPassword))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlConfirmPassword)
                    .addComponent(jtfConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jbSignUp)
                .addContainerGap(99, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Listener for the Sign Up button. 
     * Gets values currently in the text fields and signs the user up
     * @param evt 
     */
    private void jbSignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSignUpActionPerformed
        try 
        {
            //Get the text from the text fields
            username = jtfUsername.getText();
            password = jtfPassword.getText();
            confirmPassword = jtfConfirmPassword.getText();
            
            //Search the database for anyone who already has that username
            ps = con.prepareStatement("SELECT username FROM player;");
            rs = ps.executeQuery();
            rsMD = rs.getMetaData();
            column = rsMD.getColumnCount();
            int y = 0;
            
            //Let the user know if the username has already been taken
            while(rs.next() == true){
                for(int n = 1; n <= column; n++){
                    S = rs.getString(n);
                    if(username.equals(S)){
                        y++;
                        JOptionPane.showMessageDialog(frame, "That username is already in use. Please choose a new username.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                    else{
                        
                    }    
                }
            }
            
            //If the username does not already exist in the database, insert the row
            if(y == 0){
                
                //If the passwords match, enter the row
                if(password.equals(confirmPassword)){
                    ps = con.prepareStatement("INSERT INTO player (username, password) VALUES ('" + username + "', '" + password + "');");
                    ps.executeUpdate();
                    ps.close();
                    con.close();
                    this.getTopLevelAncestor().setVisible(false);
                }
                else{
                    JOptionPane.showMessageDialog(frame, "The passwords do not match.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(jpSignUp.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jbSignUpActionPerformed

    private void jtfPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfPasswordActionPerformed

    private void jtfConfirmPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfConfirmPasswordActionPerformed
        try {
            username = jtfUsername.getText();
            password = jtfPassword.getText();
            confirmPassword = jtfConfirmPassword.getText();
            
            ps = con.prepareStatement("SELECT username FROM player;");
            rs = ps.executeQuery();
            rsMD = rs.getMetaData();
            column = rsMD.getColumnCount();
            int y = 0;
            while(rs.next() == true){
                for(int n = 1; n <= column; n++){
                    S = rs.getString(n);
                    if(username.equals(S)){
                        y++;
                        JOptionPane.showMessageDialog(frame, "That username is already in use. Please choose a new username.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                    else{
                        
                    }    
                }
            }
            if(y == 0){
                if(password.equals(confirmPassword)){
                    ps = con.prepareStatement("INSERT INTO player (username, password) VALUES ('" + username + "', '" + password + "');");
                    ps.executeUpdate();
                    ps.close();
                    con.close();
                    this.getTopLevelAncestor().setVisible(false);
                }
                else{
                    JOptionPane.showMessageDialog(frame, "The passwords do not match.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(jpSignUp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jtfConfirmPasswordActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbSignUp;
    private javax.swing.JLabel jlConfirmPassword;
    private javax.swing.JLabel jlPassword;
    private javax.swing.JLabel jlUsername;
    private javax.swing.JPasswordField jtfConfirmPassword;
    private javax.swing.JPasswordField jtfPassword;
    private javax.swing.JTextField jtfUsername;
    // End of variables declaration//GEN-END:variables
}
