/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package turnbasedstrategy;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import turnbasedstrategy.Server.clientThread;

/**
 *
 * @author cxz5100
 */
public class jpBattleground extends javax.swing.JPanel {

    DBConnection connect = new DBConnection();
    Connection con = connect.connectToDB();

    private static String player1;
    private static String character1;
    private static String player2;
    private static String character2;
    
    private clientThread threadPlayerOne;
    private clientThread threadPlayerTwo;
    private boolean full;

    int ID;
    String characterName;
    int characterType;
    double physicalAttack;
    double specialAttack;
    double physicalDefense;
    double specialDefense;
    double speed;
    double mana;
    double health;
    int exp;
    int level;
    
    Player playerOne, playerTwo;

    PreparedStatement ps;
    ResultSet rs;
    String S;

    /**
     * Creates new form jpBattleground
     */
    public jpBattleground() {
        initComponents();
        
        threadPlayerOne = null;
        threadPlayerTwo = null;
        
        jPanel1.setVisible(false);
        
        jtpPlayerOneName.setText(player1);
        jTextPane2.setText(character1);
        jtpPlayerTwoName.setText(player2);
        jTextPane4.setText(character2);
        
        characterName = character1;
        loadCharacter();
        characterName = character2;
        loadCharacter();
        
}
    public jpBattleground(clientThread pOne) 
    {
        initComponents();
        
        threadPlayerOne = pOne;
        full = false;
        playerOne = pOne.passPlayer();
        

    }
    
    public void getPlayerTwo(clientThread pTwo)
    {
        System.out.println("Got into getPlayerTwo");
        
        threadPlayerTwo = pTwo;
        full = true;
        playerTwo = pTwo.passPlayer();
        
        displayPlayers();
        
        //playGame();
    }
    
    public void displayPlayers()
    {
        jtpPlayerOneName.setText(playerOne.getName());
        jtpPlayerTwoName.setText(playerTwo.getName());
    }
    
    public void connectPlayers()
    {
        
        //threadPlayerOne.setOpponentStream(threadPlayerTwo);
        //threadPlayerTwo.setOpponentStream(threadPlayerOne);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jProgressBar1 = new javax.swing.JProgressBar();
        jProgressBar2 = new javax.swing.JProgressBar();
        jProgressBar3 = new javax.swing.JProgressBar();
        jProgressBar4 = new javax.swing.JProgressBar();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtpPlayerOneName = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtpPlayerTwoName = new javax.swing.JTextPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextPane4 = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextPane5 = new javax.swing.JTextPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextPane6 = new javax.swing.JTextPane();

        setPreferredSize(new java.awt.Dimension(700, 520));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jProgressBar1.setBorderPainted(false);

        jScrollPane2.setViewportView(jtpPlayerOneName);

        jScrollPane3.setViewportView(jTextPane2);

        jScrollPane4.setViewportView(jtpPlayerTwoName);

        jScrollPane5.setViewportView(jTextPane4);

        jButton1.setText("Attack");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Special Attack");

        jButton3.setText("Block");

        jButton4.setText("Item");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        jScrollPane6.setViewportView(jTextPane5);

        jScrollPane7.setViewportView(jTextPane6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane2)
                                .addComponent(jProgressBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jProgressBar4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jProgressBar3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 332, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jProgressBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jProgressBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jProgressBar4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
    }//GEN-LAST:event_jButton1ActionPerformed

    public static void setPlayer(String p, String c) {
        if (player1 == null) {
            player1 = p;
            character1 = c;
        } else {
            player2 = p;
            character2 = c;
        }
    }

    public void loadCharacter() {

        try {
            ps = con.prepareStatement("SELECT ID FROM characters WHERE characterName = '" + characterName + "';");
            rs = ps.executeQuery();
            S = rs.getString(1);
            ID = Integer.parseInt(S);
            
            ps = con.prepareStatement("SELECT characterType FROM defaultCharacters WHERE characterName = '" + characterName + "';");
            rs = ps.executeQuery();
            S = rs.getString(1);
            characterType = Integer.parseInt(S); 

            ps = con.prepareStatement("SELECT health FROM characters WHERE ID = " + ID + ";");
            rs = ps.executeQuery();
            S = rs.getString(1);
            health = Double.parseDouble(S);

            ps = con.prepareStatement("SELECT mana FROM characters WHERE ID = " + ID + ";");
            rs = ps.executeQuery();
            S = rs.getString(1);
            mana = Double.parseDouble(S);

            ps = con.prepareStatement("SELECT attack FROM characters WHERE ID = " + ID + ";");
            rs = ps.executeQuery();
            S = rs.getString(1);
            physicalAttack = Double.parseDouble(S);

            ps = con.prepareStatement("SELECT specialAttack FROM characters WHERE ID = " + ID + ";");
            rs = ps.executeQuery();
            S = rs.getString(1);
            specialAttack = Double.parseDouble(S);

            ps = con.prepareStatement("SELECT defense FROM characters WHERE ID = " + ID + ";");
            rs = ps.executeQuery();
            S = rs.getString(1);
            physicalDefense = Double.parseDouble(S);

            ps = con.prepareStatement("SELECT specialDefense FROM characters WHERE ID = " + ID + ";");
            rs = ps.executeQuery();
            S = rs.getString(1);
            specialDefense = Double.parseDouble(S);

            ps = con.prepareStatement("SELECT speed FROM characters WHERE ID = " + ID + ";");
            rs = ps.executeQuery();
            S = rs.getString(1);
            speed = Double.parseDouble(S);

            ps = con.prepareStatement("SELECT exp FROM characters WHERE ID = '" + ID + "';");
            rs = ps.executeQuery();
            S = rs.getString(1);
            
            int currentEXP = exp;
            int z = 100;
            level = 1;
            while(exp >= z){
                level++;
                z = z + (level * 100);
            }
            z = z - (level * 100);
            currentEXP = currentEXP - z;
            
            if (characterName == character1) {
                jTextPane5.setText(Integer.toString(level));
                
                jProgressBar1.setMaximum((int) health);
                jProgressBar1.setValue((int) health);
                S = Integer.toString((int) health);
                jProgressBar1.setString(S);

                jProgressBar2.setMaximum((int) mana);
                jProgressBar2.setValue((int) mana);
                S = Integer.toString((int) mana);
                jProgressBar2.setString(S);
                
            } else if (characterName == character2) {
                jTextPane6.setText(Integer.toString(level));
                
                jProgressBar3.setMaximum((int) health);
                jProgressBar3.setValue((int) health);
                S = Integer.toString((int) health);
                jProgressBar3.setString(S);

                jProgressBar4.setMaximum((int) mana);
                jProgressBar4.setValue((int) mana);
                S = Integer.toString((int) mana);
                jProgressBar4.setString(S);
            }

        } catch (SQLException ex) {
            Logger.getLogger(jpBattleground.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

//                      jpBattleground battleground = new jpBattleground();
//                      battleground.setVisible(true);
//                      JDialog jdBattleground = new JDialog();
//                      JPanel Battleground = new jpBattleground();
//                      jdBattleground.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
//                      jdBattleground.add(Battleground);
//                      jdBattleground.setSize(800, 630);
//                      jdBattleground.setModal(true);
//                      jdBattleground.setVisible(true);

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JProgressBar jProgressBar3;
    private javax.swing.JProgressBar jProgressBar4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JTextPane jTextPane4;
    private javax.swing.JTextPane jTextPane5;
    private javax.swing.JTextPane jTextPane6;
    private javax.swing.JTextPane jtpPlayerOneName;
    private javax.swing.JTextPane jtpPlayerTwoName;
    // End of variables declaration//GEN-END:variables
}
